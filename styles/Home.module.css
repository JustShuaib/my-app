/* TODO: Implement the light mode too */
.main {
  min-height: 100vh;
}
.loading,
.emptyLink {
  text-align: center;
}
.form {
  padding: 1.5rem;
  margin-block: 1rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 1rem;
}
@media screen and (min-width: 768px) {
  .form {
    width: 50%;
    margin-inline: auto;
    margin-block: 2rem;
    padding: 0;
    flex-direction: row;
    justify-content: center;
    align-items: flex-end;
  }
  .form:has(input[aria-invalid="true"]) {
    align-items: center;
  }
}
.inputContainer {
  display: flex;
  flex-direction: column;
}
@media screen and (min-width: 768px) {
  .inputContainer {
    flex-basis: 100%;
  }
}
.textContainer {
  display: flex;
  flex-direction: column;
  gap: 0.2rem;
}
.label {
  font-size: 0.85rem;
  margin-bottom: 0.3rem;
}
.input {
  padding: 0.5rem;
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: #000;
  font-family: "Roboto Mono", monospace;
}
.input:focus {
  outline: none;
  border-color: #0070f3;
}
.input[aria-invalid="true"] {
  border-color: #f00;
}
.error {
  color: #f00;
  font-size: 0.8rem;
  margin: 0;
}
.btn {
  color: #000;
  background-color: #fff;
  padding-block: 0.6rem;
  border-radius: 5px;
  font-family: inherit;
  font-weight: 600;
  border: none;
  cursor: pointer;
}
.btn:hover {
  opacity: 0.97;
}
@media screen and (min-width: 768px) {
  .btn {
    flex-basis: 30%;
  }
}
.linksContainer {
  display: flex;
  flex-direction: column;
}
@media screen and (min-width: 768px) {
  .linksContainer {
    place-items: center;
  }
}
.title {
  font-size: 1.2rem;
  text-align: center;
  margin: 0;
}
